#BlueJ class context
comment0.params=
comment0.target=FondDeCarte()
comment0.text=\r\n\ Constructeur\ "test"\ qui\ affiche\ une\ carte\ d\u00E9j\u00E0\ d\u00E9finie.\r\n
comment1.params=name\ title\ zoom
comment1.target=FondDeCarte(java.lang.String,\ java.lang.String,\ double)
comment1.text=\r\n\ Constructeur\ qui\ affiche\ n'importe\ quelle\ carte\ dans\ une\ fen\u00EAtre\ de\ taille\ 1300x760.\r\n\ \r\n\ @param\ name\ -\ le\ nom\ du\ fichier\ image\ \u00E0\ charger,\ avec\ l'extension\ et\ les\ guillemets.\r\n\ @param\ title\ -\ le\ nom\ de\ la\ fen\u00EAtre\ graphique\ avec\ les\ guillemets.\r\n\ @param\ zoom\ -\ le\ zoom\ avec\ lequel\ on\ affiche\ l'image.\ Zoom\ x1\ pour\ adapter\ la\ taille\ de\ l'image\ \u00E0\ la\ taille\ de\ l'\u00E9cran.\r\n
comment10.params=other
comment10.target=void\ setImage(java.awt.Image)
comment10.text=\r\n\ M\u00E9thode\ activateur\ attribut\ map\r\n
comment11.params=other
comment11.target=void\ setGraphics2D(java.awt.Graphics2D)
comment11.text=\r\n\ M\u00E9thode\ activateur\ attribut\ Graphics2D\r\n
comment12.params=other
comment12.target=void\ setZoom(int)
comment12.text=\r\n\ M\u00E9thode\ activateur\ attribut\ zoom\r\n
comment13.params=other
comment13.target=void\ setTabWaypoint(Waypoint[])
comment13.text=\r\n\ M\u00E9thode\ activateur\ attribut\ tableau\ de\ Waypoint\r\n
comment14.params=other
comment14.target=void\ setTabLeg(Leg[])
comment14.text=\r\n\ M\u00E9thode\ activateur\ attribut\ tableau\ de\ Leg\r\n
comment15.params=point
comment15.target=void\ setOrigine(java.awt.Point)
comment15.text=\r\n\ M\u00E9thode\ activateur\ attribut\ origine\r\n\ \r\n\ @param\ point\ -\ la\ nouvelle\ origine\r\n
comment16.params=waypoint
comment16.target=boolean\ appartient(Waypoint)
comment16.text=\r\n\ V\u00E9rifie\ qu'un\ waypoint\ appartient\ \u00E0\ la\ fen\u00EAtre\ d'affichage.\ //C'est\ plut\u00F4t\ une\ m\u00E9thode\ auxiliaire...\r\n\ \r\n\ @param\ waypoint\ -\ le\ point\ pour\ lequel\ on\ veut\ faire\ cette\ v\u00E9rification\r\n\ @return\ un\ bool\u00E9en,\ true\ s'il\ appartient\ \u00E0\ la\ fen\u00EAtre\ d'affichage\ et\ false\ dans\ le\ cas\ contraire\r\n
comment17.params=waypoint
comment17.target=int\ distanceCarre(Waypoint)
comment17.text=\r\n\ Calcule\ la\ distance\ au\ carr\u00E9\ entre\ le\ dernier\ clic\ souris\ et\ un\ waypoint\ pass\u00E9\ en\ param\u00E8tre.\r\n\ Cette\ m\u00E9thode\ sert\ d'auxiliaire\ pour\ la\ classe\ Leg.\r\n
comment18.params=zoomfinal
comment18.target=void\ zoomer(double)
comment18.text=\r\n\ Zoomer\ sur\ le\ fond\ de\ carte\ actuel\ par\ rapport\ au\ point\ central\ de\ la\ fen\u00EAtre\ d'affichage\ en\ cours.\r\n\ \r\n\ @param\ zoomfinal\ -\ le\ zoom\ final\ du\ fond\ de\ carte.\r\n
comment19.params=
comment19.target=void\ deplacementEtZoomClavier()
comment19.text=\r\n\ Permet\ de\ g\u00E9rer\ les\ diff\u00E9rentes\ op\u00E9rations\ de\ zoom\ et\ de\ d\u00E9placement\ sur\ le\ fond\ de\ carte.\ Toutes\ les\ op\u00E9rations\ s'effectuent\ au\ clavier.\ \r\n\ \r\n\ ZOOM\ (ou\ d\u00E9zoomer)\ \:\ par\ cran\ de\ +\ ou\ -\ 0,1.\ Pour\ zoomer\ davantage,\ appuyer\ sur\ la\ touche\ 'p'\ du\ clavier\ (Plus)\ et\ pour\ d\u00E9zoomer,\r\n\ appuyer\ sur\ la\ touche\ 'm'\ (Moins).\ Si\ la\ touche\ est\ maintenue\ enfonc\u00E9e,\ le\ zoom\ fonctionne\ aussi\ longtemps\ que\ l'utilisateur\ laisse\ le\ doigt\ sur\ la\ touche.\r\n\ \r\n\ DEPLACEMENT\ \:\ \u00E0\ zoom\ constant.\ Pour\ se\ d\u00E9placer,\ on\ utilise\ les\ touches\ du\ clavier\ \ \:\ 'd'\ pour\ droite,\ 'q'\ pour\ gauche,\ 's'\ pour\ bas\ et\ 'z'\ pour\ haut.\ \r\n\ De\ m\u00EAme,\ l'appui\ long\ fonctionne\ avec\ le\ d\u00E9placement.\r\n\ \r\n\ ARR\u00CAT\ \:\ On\ appuie\ sur\ la\ touche\ 't'\ (Terminer)\r\n
comment2.params=
comment2.target=ImageN6K\ getImageN6K()
comment2.text=\r\n\ M\u00E9thode\ observateur\ attribut\ ImageN6K\r\n
comment20.params=leg
comment20.target=void\ removeLeg(Leg)
comment20.text=\r\n\ Supprimer\ un\ leg\ du\ tableau\ de\ Legs.\ Cette\ m\u00E9thode\ permet\ aussi\ de\ combler\ le\ trou\ ainsi\ cr\u00E9\u00E9.\r\n\ \r\n\ @param\ leg\ -\ le\ leg\ que\ l'on\ souhaite\ supprimer\ du\ tableau\r\n
comment21.params=
comment21.target=void\ removeWaypoint()
comment21.text=\r\n\ Supprimer\ un\ waypoint\ existant\ par\ clic\ souris.\ La\ m\u00E9thode\ recalcule\ aussi\ la\ nouvelle\ trajectoire\ (si\ possible...)\r\n
comment3.params=
comment3.target=java.awt.Image\ getImage()
comment3.text=\r\n\ M\u00E9thode\ observateur\ attribut\ Image\r\n
comment4.params=
comment4.target=java.awt.Graphics2D\ getGraphics2D()
comment4.text=\r\n\ M\u00E9thode\ observateur\ attribut\ Graphics2D\r\n
comment5.params=
comment5.target=double\ getZoom()
comment5.text=\r\n\ M\u00E9thode\ observateur\ attribut\ double\ zoom\r\n
comment6.params=
comment6.target=Waypoint[]\ getTabWaypoint()
comment6.text=\r\n\ M\u00E9thode\ observateur\ attribut\ tableau\ de\ waypoints\r\n
comment7.params=
comment7.target=Leg[]\ getTabLeg()
comment7.text=\r\n\ M\u00E9thode\ observateur\ attribut\ tableau\ de\ legs\r\n
comment8.params=
comment8.target=java.awt.Point\ getOrigine()
comment8.text=\r\n\ M\u00E9thode\ observateur\ attribut\ origine\r\n
comment9.params=other
comment9.target=void\ setImageN6K(ImageN6K)
comment9.text=\r\n\ M\u00E9thode\ activateur\ attribut\ dessin\r\n
numComments=22
